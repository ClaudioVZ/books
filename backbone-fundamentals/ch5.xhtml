<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title><a name="unittestingqunit">Unit Testing Backbone Applications With QUnit And SinonJS</a></title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
</head>
<body>
<h1><a name="unittestingqunit">Unit Testing Backbone Applications With QUnit And SinonJS</a></h1>
<h2 id="introduction">Introduction</h2><p>QUnit is a powerful JavaScript test suite written by jQuery team member <a href="http://bassistance.de/">JÃ¶rn Zaefferer</a> and used by many large open-source projects (such as jQuery and Backbone.js) to test their code. It's both capable of testing standard JavaScript code in the browser as well as code on the server-side (where environments supported include Rhino, V8 and SpiderMonkey). This makes it a robust solution for a large number of use-cases.</p><p>Quite a few Backbone.js contributors feel that QUnit is a better introductory framework for testing if you don't wish to start off with Jasmine and BDD right away. As we'll see later on in this chapter, QUnit can also be combined with third-party solutions such as SinonJS to produce an even more powerful testing solution supporting spies and mocks, which some say is preferable over Jasmine.</p><p>My personal recommendation is that it's worth comparing both frameworks and opting for the solution that you feel the most comfortable with.</p>
</body>
</html>

